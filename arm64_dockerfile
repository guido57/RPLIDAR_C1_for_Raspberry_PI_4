# build with: 
#   docker build -t ros2-humble-arm64 --platform linux/arm64 -f  arm64_dockerfile .

# run with:
#   docker run -it --network host --platform linux/arm64 ros2-humble-arm64 /bin/bash

FROM arm64v8/ubuntu:jammy

# update repositories only once
RUN apt-get update

# Install necessary dependencies
RUN apt-get install -y \
   build-essential \
   cmake \
   git \
   python3-pip \
   wget \
   curl \
   lsb-release \
   gnupg2 \
   locales


# add locale     
RUN locale-gen en_US en_US.UTF-8 && \
   update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8

RUN apt-get install -y software-properties-common

# Add ROS 2 repository
RUN add-apt-repository -y universe
RUN apt-get update

#Download the ros.key    
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

#install tzdata without interaction to avoid interaction when installing ros-dev-tools
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata

RUN apt-get update

# Install ROS 2 Humble
RUN apt-get install -y \
   ros-humble-ros-base \
   ros-dev-tools

# Source ROS 2 setup
SHELL ["/bin/bash", "-c"]
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc


# Create the colcon structure
RUN mkdir -p /home/robot/RPLIDAR_C1_ws/src/  &&    \
    cd /home/robot/RPLIDAR_C1_ws/src/        &&    \
    git clone https://github.com/Slamtec/sllidar_ros2.git
  
# Build sllidar_ros2 package
RUN cd /home/robot/RPLIDAR_C1_ws/             &&   \       
    source /opt/ros/humble/setup.bash         &&   \
    colcon build --symlink-install
